version: "3.7"
services:

  nginx: 
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf.template:/etc/nginx/template/nginx.conf.template
      - ./nginx_error.log:/etc/nginx/error_log.log
      - ./options-ssl-nginx.conf:/etc/nginx/options-ssl-nginx.conf
      - certbot-webroot:/webroots/${DOMAIN}/.well-known
      - certbot-letsencrypt:/etc/letsencrypt
    depends_on:
      - client
      - server
    ports:  # host(rpi):container or only container
      - 80:80
      - 443:443
    environment:
      - KEY_PATH
      - CERT_PATH
      - CA_PATH
      - DOMAIN
    # command to replace env vars in the nginx.conf file
    # note that \$ escaping does not work
    command: /bin/bash -c "envsubst '$$KEY_PATH $$CERT_PATH $$CA_PATH $$DOMAIN' < /etc/nginx/template/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'" 

  mongo:
    container_name: mongo
    restart: on-failure:10
    image: andresvidal/rpi3-mongodb3
    # build:
    #   context: .
      # dockerfile: Dockerfilee.mymongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=dbuser
      - MONGO_INITDB_ROOT_PASSWORD=mydbdbmy
      #- MONGO_INITDB_DATABASE=db
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    command: bash -c "mongod --repair && mongod"  # added my answer in `https://github.com/wekan/wekan-mongodb/issues/6`

  mongoClientTemp:
    image: andresvidal/rpi3-mongodb3
    #image: alpine:latest  # for non rpi projects
    container_name: mongoClientTemp
    links:
      - mongo
    volumes:
      - ./deployment_scripts:/deployment_scripts
    command: 
      #- mongo --host mongo --eval  "db.getSiblingDB('dashboard').createUser({user:'db', pwd:'dbpass', roles:[{role:'readWrite',db:'dashboard'}]});"
      - /deployment_scripts/add_user.sh
    depends_on:
      - mongo

  certbot:
    container_name: certbot
    restart: always
    build:
      context: ./certbot/  # this is also the context folder of the build
      args:
        - DOMAIN=${DOMAIN}
    volumes:
      - certbot-webroot:/webroots/${DOMAIN}/.well-known
      - certbot-letsencrypt:/etc/letsencrypt

  upnp:
    container_name: upnp
    restart: on-failure:10
    network_mode: host  # will expose external network to this container while it runs
    build:
      context: ./upnp/  # this is also the context folder of the build
      network: host  # will expose external network to this container on build

  server:
    container_name: server
    restart: always
    build: ./server/  # this is also the context folder of the build
    volumes:
      - ./server/:/usr/src/app
      - /usr/src/app/node_modules
      - certbot-webroot:/webroots/${DOMAIN}/.well-known
      - certbot-letsencrypt:/etc/letsencrypt
    ports:  # host(rpi):container or only container
      - "80"
    environment:
      - PORT=80
      - KEY_PATH
      - CERT_PATH
      - CA_PATH
      - DOMAIN
      - ACTION_ON_GOOLE_CLIENT_ID
    depends_on:
      - mongoClientTemp
    links:
      - mongo
    command: npm run devserver

  client:
    container_name: client
    restart: on-failure:10
    build: 
      context: ./client/  # this is also the context folder of the build
      network: host
      args:
        - CERT_PATH=${CERT_PATH}
    environment:
      - DOMAIN
      - KEY_PATH
      - CERT_PATH
      - CA_PATH
    volumes:
      - ./client/:/usr/src/app/
      - /usr/src/app/node_modules
    ports:
      - "80"
    depends_on:
      - server
    command: npm start

volumes:
  certbot-webroot:
  certbot-letsencrypt: